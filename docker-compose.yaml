version: '3.8'

services:
  flask:
    build:
      context: ./flask_app
      dockerfile: Dockerfile-flask
    container_name: flask_service
    ports:
      - "5000:5000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://${FLASK_DB_USER}:${FLASK_DB_PASSWORD}@db:5432/${FLASK_DB_NAME}
    networks:
      - nexfitra_network
  
  flask_tests:
    build:
      context: ./flask_app
      dockerfile: Dockerfile-flask-test
    container_name: flask_tests
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://${FLASK_DB_USER}:${FLASK_DB_PASSWORD}@db:5432/${FLASK_DB_NAME}
    networks:
      - nexfitra_network

  fastapi:
    build:
      context: ./fastapi_app
      dockerfile: Dockerfile-fastapi
    container_name: fastapi_service
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://${FASTAPI_DB_USER}:${FASTAPI_DB_PASSWORD}@db:5432/${FASTAPI_DB_NAME}
    networks:
      - nexfitra_network

  fastapi_tests:
    build:
      context: ./fastapi_app
      dockerfile: Dockerfile-fastapi-test
    container_name: fastapi_tests
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://${FASTAPI_DB_USER}:${FASTAPI_DB_PASSWORD}@db:5432/${FASTAPI_DB_NAME}
    command: ["poetry", "run", "pytest", "-v"]
    networks:
      - nexfitra_network

  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      FLASK_DB_USER: ${FLASK_DB_USER}
      FLASK_DB_PASSWORD: ${FLASK_DB_PASSWORD}
      FLASK_DB_NAME: ${FLASK_DB_NAME}
      FASTAPI_DB_USER: ${FASTAPI_DB_USER}
      FASTAPI_DB_PASSWORD: ${FASTAPI_DB_PASSWORD}
      FASTAPI_DB_NAME: ${FASTAPI_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - nexfitra_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_service
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - nexfitra_network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  nexfitra_network: